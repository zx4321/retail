# Generated by Django 2.1.3 on 2018-12-10 15:15

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('roles', models.CharField(choices=[('1', '经理'), ('2', '店长'), ('3', '店员')], max_length=1, verbose_name='角色')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Feedback_Stat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': '仓库盘点',
                'verbose_name_plural': '仓库盘点',
            },
        ),
        migrations.CreateModel(
            name='InLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='进货日期')),
                ('amount', models.PositiveSmallIntegerField(default=1, verbose_name='进货数量')),
            ],
            options={
                'verbose_name': '进货日志',
                'verbose_name_plural': '进货日志',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='日期')),
                ('comment', models.CharField(blank=True, max_length=50, null=True, verbose_name='备注')),
                ('status', models.CharField(choices=[('1', '未付款'), ('2', '出货中'), ('3', '退货中'), ('4', '已完成')], max_length=1, verbose_name='状态')),
                ('confirmation', models.BooleanField(choices=[(False, '未审核'), (True, '已审核')], default=False, verbose_name='审核状态')),
            ],
            options={
                'verbose_name': '订单',
                'verbose_name_plural': '订单',
            },
        ),
        migrations.CreateModel(
            name='OrderGood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(default=1, verbose_name='商品数量')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retail.Order', verbose_name='订单')),
            ],
            options={
                'verbose_name': '订单商品',
                'verbose_name_plural': '订单商品',
            },
        ),
        migrations.CreateModel(
            name='OutLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='出货日期')),
                ('ordergood', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retail.OrderGood')),
            ],
            options={
                'verbose_name': '出货日志',
                'verbose_name_plural': '出货日志',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='姓名')),
                ('gender', models.CharField(choices=[('M', '男'), ('F', '女')], max_length=1, verbose_name='性别')),
                ('telephone', models.CharField(max_length=20, verbose_name='电话')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='产品名称')),
                ('category', models.CharField(choices=[('1', '百货'), ('2', '零食'), ('3', '电器'), ('4', '水果')], max_length=1, verbose_name='产品类型')),
                ('in_price', models.IntegerField(verbose_name='进价')),
                ('wholesale_price', models.IntegerField(verbose_name='批发价')),
                ('retail_price', models.IntegerField(verbose_name='零售价')),
            ],
            options={
                'verbose_name': '产品',
                'verbose_name_plural': '产品',
            },
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='仓库名称')),
                ('location', models.CharField(max_length=30, verbose_name='仓库地址')),
            ],
            options={
                'verbose_name': '仓库',
                'verbose_name_plural': '仓库',
            },
        ),
        migrations.CreateModel(
            name='TransferLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(default=1, verbose_name='调货数量')),
                ('time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='出货日期')),
                ('from_repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_repository', to='retail.Repository', verbose_name='出货仓库')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retail.Product')),
                ('to_repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_repository', to='retail.Repository', verbose_name='目的仓库')),
            ],
            options={
                'verbose_name': '调货日志',
                'verbose_name_plural': '调货日志',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='retail.Person')),
                ('level', models.CharField(choices=[('1', '一级代理'), ('2', '二级代理'), ('3', '普通顾客'), ('4', 'vip客户')], max_length=1, verbose_name='种类')),
                ('location', models.CharField(max_length=32, verbose_name='收货地址')),
            ],
            options={
                'verbose_name': '顾客',
                'verbose_name_plural': '顾客',
            },
            bases=('retail.person',),
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='retail.Person')),
            ],
            options={
                'verbose_name': '供货商',
                'verbose_name_plural': '供货商',
            },
            bases=('retail.person',),
        ),
        migrations.AddField(
            model_name='ordergood',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retail.Product', verbose_name='商品名称'),
        ),
        migrations.AddField(
            model_name='ordergood',
            name='repository',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retail.Repository', verbose_name='仓库'),
        ),
        migrations.AddField(
            model_name='inlog',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retail.Product', verbose_name='进货产品'),
        ),
        migrations.AddField(
            model_name='inlog',
            name='repository',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retail.Repository', verbose_name='进货仓库'),
        ),
        migrations.AddField(
            model_name='order',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retail.Customer', verbose_name='顾客'),
        ),
        migrations.AddField(
            model_name='inlog',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='retail.Provider'),
        ),
    ]
